AWS: 
1. Write an AWS Lambda function that adds two numbers and returns the result.
#python:
import json

def lambda_handler(event, context):
    # Extract numbers from the event
    num1 = event.get('num1')
    num2 = event.get('num2')
    
    # Check if both numbers are provided
    if num1 is None or num2 is None:
        return {
            'statusCode': 400,
            'body': json.dumps('Error: Please provide both num1 and num2.')
        }
    
    # Calculate the sum
    result = num1 + num2
    
    # Return the result
    return {
        'statusCode': 200,
        'body': json.dumps({'result': result})
    }
#Json:
{
    "num1": 5,
    "num2": 10
}
--------------------------------------------------------------------------------------------------------------------------
2.Code an AWS Lambda function to store a document or PDF file in an S3 bucket.
#Python:
import json
import boto3
import base64
import os

s3 = boto3.client('s3')

def lambda_handler(event, context):
    # Extract bucket name and file details from the event
    bucket_name = os.environ['BUCKET_NAME']
    file_name = event.get('file_name')
    file_content = event.get('file_content')  # Base64 encoded content
    
    # Check if file name and content are provided
    if not file_name or not file_content:
        return {
            'statusCode': 400,
            'body': json.dumps('Error: Please provide both file_name and file_content.')
        }
    
    # Decode the base64 content
    try:
        file_data = base64.b64decode(file_content)
    except Exception as e:
        return {
            'statusCode': 400,
            'body': json.dumps(f'Error decoding file content: {str(e)}')
        }
    
    # Upload the file to S3
    try:
        s3.put_object(Bucket=bucket_name, Key=file_name, Body=file_data)
        return {
            'statusCode': 200,
            'body': json.dumps(f'Successfully uploaded {file_name} to {bucket_name}.')
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'body': json.dumps(f'Error uploading file: {str(e)}')
        }
#Json:
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "s3:PutObject",
                "s3:GetObject"
            ],
            "Resource": "arn:aws:s3:::your-bucket-name/*"
        }
    ]
}
